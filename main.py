import asyncio
from aiogram import Bot, Dispatcher, F
from aiogram.filters import CommandStart
from aiogram.types import Message, CallbackQuery
import time
from keyboards import start_main_kbb, mouse_main_kbb
from mouse_def import LKM_mouse_def, PKM_mouse_def, left_mouse_def, right_mouse_def, down_mouse_def, upstairs_mouse_def, block_mouse_def



bot = Bot(token="6515705546:AAFd1Qv0aKPCsHZvPfj-IK0zNuxgm2LNAik")
dp = Dispatcher()




@dp.message(CommandStart())
async def start_main(message: Message):
    await message.answer("üåü –ü—Ä–∏–≤–µ—Ç! –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª –∏–º–µ–Ω–Ω–æ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞! üåü\n–ù–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º–º - https://t.me/+LXG_pxKV0AtjMzE6")
    time.sleep(0.5)
    await message.answer("–í—ã–±–µ—Ä–∏ —Ç–µ–±–µ –Ω—É–∂–Ω—ã–π –ø—É–Ω–∫—Ç.", reply_markup=start_main_kbb)


@dp.message(F.text == "üñ± - –ú—ã—à—å")
async def mouse_main(message: Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:", reply_markup=mouse_main_kbb)

@dp.callback_query(F.data == "mouse_LKM")
async def mouse_LKM_main(callback: CallbackQuery):
    LKM_mouse_def()
    await callback.message.answer("–õ–µ–≤–∞—è –∫–Ω–æ–ø–∫–∞ –º—ã—à–∏ –Ω–∞–∂–∞—Ç–∞.")

@dp.callback_query(F.data == "mouse_PKM")
async def mouse_LKM_main(callback: CallbackQuery):
    PKM_mouse_def()
    await callback.message.answer("–ü—Ä–∞–≤–∞—è –∫–Ω–æ–ø–∫–∞ –º—ã—à–∏ –Ω–∞–∂–∞—Ç–∞.")

@dp.callback_query(F.data == "upstairs")
async def mouse_upstairs_main(callback: CallbackQuery):
    upstairs_mouse_def()
    await callback.message.answer("–ö—É—Ä—Å–æ—Ä –ø–æ–¥–Ω—è–ª—Å—è –≤–≤–µ—Ä—Ö.")

@dp.callback_query(F.data == "down")
async def mouse_down_main(callback: CallbackQuery):
    down_mouse_def()
    await callback.message.answer("–ö—É—Ä—Å–æ—Ä –æ–ø—É—Å—Ç–∏–ª—Å—è –≤–Ω–∏–∑.")

@dp.callback_query(F.data == "mouse_left")
async def left_mouse_main(callback: CallbackQuery):
    left_mouse_def()
    await callback.message.answer("–ö—É—Ä—Å–æ—Ä —É—à–µ–ª –≤ –ª–µ–≤–æ.")

@dp.callback_query(F.data == "mouse_right")
async def reight_mouse_main(callback: CallbackQuery):
    right_mouse_def()
    await callback.message.answer("–ö—É—Ä—Å–æ—Ä —É—à–µ–ª –≤ –ø—Ä–∞–≤–æ.")



@dp.callback_query(F.data == "block")
async def block_mouse_main(callback: CallbackQuery):
    block_mouse_def()
    await callback.message.answer("–ú—ã—à–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞.")

@dp.callback_query(F.data == "unlocking")
async def unlocking_mouse_main(callback: CallbackQuery):
    upstairs_mouse_def()
    await callback.message.answer("–ú—ã—à–∫–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞.")



async def main():
    await dp.start_polling(bot)



if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("Exit")